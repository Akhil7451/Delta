Faker   -   Package to generate fake data.

            npm i @faker-js/faker

            userId      username    email   password    // to get these data we write.

            const { faker } = require('@faker-js/faker');

            let getRandomUser = () => {
            return {
                id: faker.datatype.uuid(),
                username: faker.internet.userName(),
                email: faker.internet.email(),
                password: faker.internet.password(),
            };
            }

            console.log(getRandomUser());

MySQL2 Package  -   To connect Node with MySQL

            npm i mysql2

            connection.end();   //to close connection.

    TO  access MySQL in our CLI(Command Line Interface) we have to run command

        /user/local/mysql/bin/mysql -u root -p

                                Working with Database

    CREATE Table user   -   

        CREATE TABLE user (
            id VARCHAR(50) PRIMARY KEY,
            username VARCHAR(50) UNIQUE,
            email VARCHAR(50) UNIQUE NOT NULL,
            password VARCHAR(50) NOT NULL
        );
        
    INSERT User -   Inserting data to our table.
            
        We use placeholders for inserting data(these are basically question marks(?))

            let q = "INSERT INTO user (id, username, email, password) VALUES (?, ?, ?, ?)";
            let user = ["123", "123_newuser", "abc@gmail.com", "abc"];

            // Running query on database using this function.
            try {
                connection.query(q, user, (err, result) => {
                    if(err) throw err;
                    console.log(result);
                })
            } catch (error) {
                console.log(err);
            }

            connection.end();

        To add multiple user's data inside database

            // Query to insert data into table using placeholders.
            let q = "INSERT INTO user (id, username, email, password) VALUES ?";
            let users = [
                ["1232", "1232_newuser", "abc2@gmail.com", "abc2"],
                ["1233", "1233_newuser", "abc3@gmail.com", "abc3"],
            ];

            // Running query on database using this function.
            try {
                connection.query(q, [users], (err, result) => {
                    
                    
        INSERT in Bulk  -   to add data in bulk(large number or data).
            
            let q = "INSERT INTO user (id, username, email, password) VALUES ?";

            // Get random user data
            let getRandomUser = () => {
                return [
                faker.datatype.uuid(),
                faker.internet.userName(),
                faker.internet.email(),
                faker.internet.password()
                ];
            };

            // To add user in BULK
            let data = [];              //100 Fake user's data
            for(let i=1; i<=100; i++) {
                data.push(getRandomUser());
            }

            // Running query on database using this function.
            try {
                connection.query(q, [data], (err, result) => {

    Routing -   Routing is the process of selecting a path for traffic in a network or between or across multiple networks.

        *   GET /               -   Fetch & show total number of users on our app.
        *   GET /user           -   Fetch & show (userId, username, email) of all users.
        *   Get /user/:id/edit  -   To get form to edit the username, based on id.
                                    This form will require a password.
        *   PATCH /user:id     -   To edit username, if correct password was entered in form.

